- name: Add source repository into sources list
  ansible.builtin.apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt impish-pgdg main"
    state: present
    update_cache: no
- name: Add an Apt signing key, uses whichever key is at the URL
  ansible.builtin.apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
- name: Run the equivalent of "apt-get update" as a separate step
  become: yes
  apt:
    update_cache: yes
- name: Install pg
  apt:
    name: postgresql
    state: present
- name: Install python3-psycopg2
  apt:
    name: python3-psycopg2
    state: present
- name: Start and enable services
  systemd:
    name: postgresql
    state: started
    enabled: yes
- name: "Find out if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/var/lib/pgsql/data/pg_hba.conf"
  register: postgres_data
- name: "Start and enable services"
  service: "name={{ item }} state=started enabled=yes"
  with_items:
    - postgresql
- name: "Create app database"
  postgresql_db:
    state: present
    name: "{{ db_name }}"
  become: yes
  become_user: postgres
- name: "Create db user"
  postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  become: yes
  become_user: postgres
- name: "Grant db user access to app db"
  postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    grant_option: no
    privs: all
  become: yes
  become_user: postgres
- name: "Allow md5 connection for the db user"
  postgresql_pg_hba:
    dest: "~/data/pg_hba.conf"
    contype: host
    databases: all
    method: md5
    users: "{{ db_user }}"
    create: true
  become: yes
  become_user: postgres
  notify: restart postgres
